{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Sasung\\\\tiny_projects\\\\Project7-Weather\\\\weather\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Loading from \"./Loading\";\nimport Weather from \"./Weather\";\nimport * as Location from \"expo-location\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from \"axios\";\nvar API_KEY = \"a72f3ad840fd0ea58f1983c3d26e0dde\";\n\nvar _default = function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoading: true\n    };\n\n    _this.getWeather = function _callee(latitude, longitude) {\n      var _await$axios$get, _await$axios$get$data, temp, weather;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"http://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=a72f3ad840fd0ea58f1983c3d26e0dde&units=metric\"));\n\n            case 2:\n              _await$axios$get = _context.sent;\n              _await$axios$get$data = _await$axios$get.data;\n              temp = _await$axios$get$data.main.temp;\n              weather = _await$axios$get$data.weather;\n\n              _this.setState({\n                isLoading: false,\n                temp: temp,\n                condition: weather[0].main\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getLocation = function _callee2() {\n      var _await$Location$getCu, _await$Location$getCu2, latitude, longitude;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 5:\n              _await$Location$getCu = _context2.sent;\n              _await$Location$getCu2 = _await$Location$getCu.coords;\n              latitude = _await$Location$getCu2.latitude;\n              longitude = _await$Location$getCu2.longitude;\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync(location = ({\n                latitude: latitude\n              }, {\n                longitude: longitude\n              })));\n\n            case 11:\n              _this.getWeather(latitude, longitude);\n\n              _this.setState({});\n\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              Alert.alert(\"Cannot find the location\", \"Too bad :(\");\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 15]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          temp = _this$state.temp,\n          condition = _this$state.condition,\n          city = _this$state.city;\n      return isLoading ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 4\n        }\n      }) : React.createElement(Weather, {\n        temp: Math.round(temp),\n        condition: condition,\n        city: city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 4\n        }\n      });\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/Owner/Desktop/Sasung/tiny_projects/Project7-Weather/weather/App.js"],"names":["React","Loading","Weather","Location","axios","API_KEY","state","isLoading","getWeather","latitude","longitude","get","data","temp","main","weather","setState","condition","getLocation","requestPermissionsAsync","getCurrentPositionAsync","coords","reverseGeocodeAsync","location","Alert","alert","city","Math","round","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;;;;;;;;;;;;;;;;UAGCC,K,GAAQ;AACPC,MAAAA,SAAS,EAAE;AADJ,K;;UAIRC,U,GAAa,iBAAOC,QAAP,EAAiBC,SAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAMFN,KAAK,CAACO,GAAN,yDAC6CF,QAD7C,aAC6DC,SAD7D,0DANE;;AAAA;AAAA;AAAA,uDAEXE,IAFW;AAGFC,cAAAA,IAHE,yBAGVC,IAHU,CAGFD,IAHE;AAIVE,cAAAA,OAJU,yBAIVA,OAJU;;AASZ,oBAAKC,QAAL,CAAc;AACbT,gBAAAA,SAAS,EAAE,KADE;AAEbM,gBAAAA,IAAI,EAAJA,IAFa;AAGbI,gBAAAA,SAAS,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWD;AAHT,eAAd;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAgBbI,W,GAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAENf,QAAQ,CAACgB,uBAAT,EAFM;;AAAA;AAAA;AAAA,+CAKFhB,QAAQ,CAACiB,uBAAT,EALE;;AAAA;AAAA;AAAA,6DAIXC,MAJW;AAIDZ,cAAAA,QAJC,0BAIDA,QAJC;AAISC,cAAAA,SAJT,0BAISA,SAJT;AAAA;AAAA,+CAONP,QAAQ,CAACmB,mBAAT,CACJC,QAAQ,IAAI;AAAEd,gBAAAA,QAAQ,EAARA;AAAF,iBAAc;AAAEC,gBAAAA,SAAS,EAATA;AAAF,eAAlB,CADJ,CAPM;;AAAA;AAUZ,oBAAKF,UAAL,CAAgBC,QAAhB,EAA0BC,SAA1B;;AACA,oBAAKM,QAAL,CAAc,EAAd;;AAXY;AAAA;;AAAA;AAAA;AAAA;AAaZQ,cAAAA,KAAK,CAACC,KAAN,CAAY,0BAAZ,EAAwC,YAAxC;;AAbY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;wCAiBM;AACnB,WAAKP,WAAL;AACA;;;6BACQ;AAAA,wBACqC,KAAKZ,KAD1C;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWM,IADX,eACWA,IADX;AAAA,UACiBI,SADjB,eACiBA,SADjB;AAAA,UAC4BS,IAD5B,eAC4BA,IAD5B;AAER,aAAOnB,SAAS,GACf,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADe,GAGf,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEoB,IAAI,CAACC,KAAL,CAAWf,IAAX,CAAf;AAAiC,QAAA,SAAS,EAAEI,SAA5C;AAAuD,QAAA,IAAI,EAAES,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD;AAKA;;;;EAhD2B1B,KAAK,CAAC6B,S","sourcesContent":["import React from \"react\";\nimport Loading from \"./Loading\";\nimport Weather from \"./Weather\";\nimport * as Location from \"expo-location\";\nimport { Alert } from \"react-native\";\nimport axios from \"axios\";\n\nconst API_KEY = \"a72f3ad840fd0ea58f1983c3d26e0dde\";\n\nexport default class extends React.Component {\n\tstate = {\n\t\tisLoading: true,\n\t};\n\n\tgetWeather = async (latitude, longitude) => {\n\t\tconst {\n\t\t\tdata: {\n\t\t\t\tmain: { temp },\n\t\t\t\tweather,\n\t\t\t},\n\t\t} = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a72f3ad840fd0ea58f1983c3d26e0dde&units=metric`\n\t\t);\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t\ttemp,\n\t\t\tcondition: weather[0].main,\n\t\t});\n\t};\n\n\tgetLocation = async () => {\n\t\ttry {\n\t\t\tawait Location.requestPermissionsAsync();\n\t\t\tconst {\n\t\t\t\tcoords: { latitude, longitude },\n\t\t\t} = await Location.getCurrentPositionAsync();\n\n\t\t\tawait Location.reverseGeocodeAsync(\n\t\t\t\t(location = ({ latitude }, { longitude }))\n\t\t\t);\n\t\t\tthis.getWeather(latitude, longitude);\n\t\t\tthis.setState({});\n\t\t} catch (error) {\n\t\t\tAlert.alert(\"Cannot find the location\", \"Too bad :(\");\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getLocation();\n\t}\n\trender() {\n\t\tconst { isLoading, temp, condition, city } = this.state;\n\t\treturn isLoading ? (\n\t\t\t<Loading />\n\t\t) : (\n\t\t\t<Weather temp={Math.round(temp)} condition={condition} city={city} />\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}